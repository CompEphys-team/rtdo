#!/bin/bash
if [[ $(ls | grep -c ^2016) == 0 && $(pwd | egrep -c '/2016[^/]+$') == 0 ]]; then
	echo "Error: Invoke plotAll from within results directory or its parent"
	exit 1
else
	multi=$(ls | grep -c ^2016)
	if [[ $multi > 0 ]]; then
		list=$(ls -d 2016*)
	else
		list=$(pwd)
	fi
fi
p=(gNa   ENa   gKA   gKB   gA   EK   gL   EL    C)
header=$(cat <<-'EOF'
	set terminal svg
	
	if (!exists("orig") && param != 7) orig="/home/felix/projects/rtdo/input/Mar01-1829/B1_basic_20160301-1829_wavegenNS_currents.log"
if (!exists("orig") && param == 7) orig="/home/felix/projects/rtdo/input/Feb22-1734/B1_basic_20160222-1734_wavegenNS_currents.log"
	
	set table '/dev/null'
	plot orig index 2*param+1 using 1:(RECT = sprintf('set obj rect from %f, graph 0 to %f, graph 1', $1, $2))
	plot orig index 2*param+1 using 1:(LIM = sprintf('set xrange [%f:%f]', $1, $2))
	unset table
	set style rect fc lt -1 fs solid 0.15 noborder
	eval(RECT)

	
	set ytics nomirror
	set xtics nomirror
	set border 1+2+8 lw 0.5
	set y2tics out
	set ylabel "Current response (nA)"
	set y2label "Input voltage (mV)"
	set y2tics 20
	set xlabel "Time (ms)"
	set yrange [-1500 < *:* < 1500]
	set key below
EOF
)
for dir in $list; do
	echo "Plotting $dir..."
	if [ ! -d $dir/figures ]; then
		mkdir $dir/figures
	fi
	ft=`ls $dir/*.winner.simtrace -1 | tail -1`
	fx=`ls -t $dir/*.simtrace | grep '[0-9]\.simtrace$' | tail -1`
	na=`ls -t $dir/*.simtrace | grep '[0-9]\.simtrace$' | head -1`
	trace=`ls $dir/*.traces`
	traces="$traces $trace"
	for i in ${!p[@]}; do
		pft="'$ft' u 1:param+2 w lines t 'Fully fitted' axes x1y1 lc 3"
		pfx="'$fx' index 1 u 1:param+2 w lines t 'Fixed ENa/EK/C' axes x1y1 lc 4"
		pna="'$na' index 1 u 1:param+2 w lines t 'Fixed gNa/ENa' axes x1y1 lc 7"
		po="orig index 2*param u 1:3 w lines t 'Original model' axes x1y1 lc 2"
		pv="orig index 2*param u 1:2 w lines t 'Voltage waveform' axes x1y2 lc -1"
		ptrace="'$trace' index param u (\$0/4.0):2 w lines t 'Neuron median' axes x1y1 lc 1"
		
		echo "set output '$dir/figures/${p[$i]}_all.svg'" > tmp.plt
		echo "$header" >> tmp.plt
		echo "set title 'Input waveform and response currents, ${p[$i]}'" >> tmp.plt
		echo "plot $pft, $pfx, $pna, $po, $pv, $ptrace" >> tmp.plt
		gnuplot -e "param=$i" tmp.plt 2> /dev/null
		
		echo "set output '$dir/figures/${p[$i]}_all_window.svg'" > tmp.plt
		echo "$header" >> tmp.plt
		echo "eval(LIM)" >> tmp.plt
		echo "set title 'Input waveform and response currents, ${p[$i]}'" >> tmp.plt
		echo "plot $pft, $pfx, $pna, $po, $pv, $ptrace" >> tmp.plt
		gnuplot -e "param=$i" tmp.plt 2> /dev/null
		
		echo "set output '$dir/figures/${p[$i]}_fits_window.svg'" > tmp.plt
		echo "$header" >> tmp.plt
		echo "eval(LIM)" >> tmp.plt
		echo "set title 'Input waveform and response currents, ${p[$i]}'" >> tmp.plt
		echo "plot $pft, $pfx, $pna, $pv, $ptrace" >> tmp.plt
		gnuplot -e "param=$i" tmp.plt 2> /dev/null
		
		echo "set output '$dir/figures/${p[$i]}_first_window.svg'" > tmp.plt
		echo "$header" >> tmp.plt
		echo "eval(LIM)" >> tmp.plt
		echo "set title 'Input waveform and response currents, ${p[$i]}'" >> tmp.plt
		echo "plot $pft, $po, $pv, $ptrace" >> tmp.plt
		gnuplot -e "param=$i" tmp.plt 2> /dev/null
		
		echo "set output '$dir/figures/${p[$i]}_fits.svg'" > tmp.plt
		echo "$header" >> tmp.plt
		echo "set title 'Input waveform and response currents, ${p[$i]}'" >> tmp.plt
		echo "plot $pft, $pfx, $pna, $pv, $ptrace" >> tmp.plt
		gnuplot -e "param=$i" tmp.plt 2> /dev/null
		
		echo "set output '$dir/figures/${p[$i]}_first.svg'" > tmp.plt
		echo "$header" >> tmp.plt
		echo "set title 'Input waveform and response currents, ${p[$i]}'" >> tmp.plt
		echo "plot $pft, $po, $pv, $ptrace" >> tmp.plt
		gnuplot -e "param=$i" tmp.plt 2> /dev/null
		
		echo "set output '$dir/figures/${p[$i]}_swarm.svg'" > tmp.plt
		echo "$header" >> tmp.plt
		echo "set key noautotitle" >> tmp.plt
		echo "set title 'Input waveform and response currents, ${p[$i]}'" >> tmp.plt
		echo "plot $po, $pv, \\" >> tmp.plt
		for j in $(seq 3 12); do
			echo "'$trace' index param u (\$0/4.0):$j w lines axes x1y1, \\" >> tmp.plt
		done
		gnuplot -e "param=$i" tmp.plt 2> /dev/null
	done
done

if [[ $multi > 0 ]]; then
	echo "Plotting aggregate..."
	for i in ${!p[@]}; do
		po="orig index 2*param u 1:3 w lines t 'Original model' axes x1y1 lc 2"
		pv="orig index 2*param u 1:2 w lines t 'Voltage waveform' axes x1y2 lc -1"
	
		echo "set output '${p[$i]}_swarm.svg'" > tmp.plt
		echo "$header" >> tmp.plt
		echo "set key noautotitle" >> tmp.plt
		echo "set title 'Input waveform and response currents, ${p[$i]}, all neurons'" >> tmp.plt
		echo "plot $po, $pv, \\" >> tmp.plt
	
		j=1
		for tr in $traces; do
			echo "'$tr' index param u (\$0/4.0):2 w lines axes x1y1 lc $j, \\" >> tmp.plt
			((j++))
		done
	
		gnuplot -e "param=$i" tmp.plt 2> /dev/null
	done
fi

rm tmp.plt
